============  Building Image Uploader on Windows ============

Before building you should copy file "Source\versioninfo.h.dist" to "Source\versioninfo.h". This file will be regenerated 
by "versioninc.py" utility and will contain information about build number, version, date, git commit hash.
Also python 2.7 interpreter should be installed for performing pre-build and post-build events. Ensure that your %PATH% environment 
variable includes the directory of your Python distribution.

You need Microsoft Visual Studio 2013 (with C++ compiler) or newer to build Image Uploader from source. 
Installing Update 4 for Visual Studio 2013  is strongly recommended (older versions corrupt .rc files after editing)
If you are using a newer MSVC version, you may experience some compilation errors, which can be solved easily 
(if you fix these errors, please provide a patch or pull request). But also you need to recompile 3rd-party 
libraries (boost, glog, jsoncpp, etc) against your compiler version.

All libraries (except ffmpeg) have to be built statically with static runtime. To enable Windows XP support the corresponding 
toolset has to be chosen (for example, "v120_xp" in VS 2013, "v141_xp" in Visual Studio 2017).
 
You can download all necessary libraries (including header-only libraries in "Include" subfolder) by following link:

https://drive.google.com/drive/folders/1dHjuif2sagpyNPoPs_EL63On1_A0m98N?usp=sharing

Precompiled libraries for MS Visual Studio 2013 (not compatible with newer MSVS versions): 

https://drive.google.com/file/d/1jJM9NLEPfdPLCjh_dOTx1O9S7bonjsr2/view?usp=drivesdk

Image Uploader is using the following libraries:

WTL             http://sourceforge.net/projects/wtl/

libcurl         http://curl.haxx.se/libcurl/ (patched version)

openssl         https://www.openssl.org

zlib            http://www.zlib.net

Boost           http://www.boost.org (patched version)

pcre            http://www.pcre.org

pcre++          http://www.daemon.de/PCRE (patched version)

squirrel        http://squirrel-lang.org (patched version)

sqrat		    http://scrat.sourceforge.net (patched version)

ffmpeg          https://www.ffmpeg.org

Boost.Process   https://github.com/zenden2k/boost-process-utf8 (patched version with utf-8 support)

tinyxml         http://sourceforge.net/projects/tinyxml/

gumbo           https://github.com/google/gumbo-parser

gumbo-query     https://github.com/lazytiger/gumbo-query

minizip         http://www.winimage.com/zLibDll/minizip.html

jsoncpp         https://github.com/open-source-parsers/jsoncpp

glog            https://github.com/google/glog

libwebp         https://github.com/webmproject/libwebp

base64          https://github.com/aklomp/base64

UTF8-CPP        http://utfcpp.sourceforge.net/ 

DirectShow BaseClasses (strmbasd.lib, strmbase.lib) - part of Windows SDK

Libraries for building Mega.nz:

Mega SDK        https://github.com/meganz/sdk

Crypto++        https://www.cryptopp.com/

c-ares          https://c-ares.haxx.se/

libuv           https://github.com/libuv/libuv

Libraries for building tests:

Google Mock     https://github.com/abseil/googletest


============  Building console utility (imgupload) on Ubuntu ============

Before compiling install the following packages:

sudo apt-get install g++ cmake cmake-qt-gui autoconf automake libtool fakeroot libgtest-dev libboost-dev libboost-filesystem-dev libboost-system-dev libboost-locale-dev libboost-thread-dev libssl-dev libpcre3-dev libc-ares-dev liburiparser-dev libicu-dev libsqlite3-dev libreadline-dev libfreeimage-dev libcurl4-openssl-dev

Image Uploader is using Google Mock library for tests. If you want to run them, you have to build gmock library from source:

cd /usr/src/gtest
sudo cmake .
sudo make
sudo mv libg* /usr/lib/

Note that the following libraries: glog, gflags, libuv, cryptopp, gumbo, jsoncpp have to be statically built from source. 
Before building glog remove package libgflags-dev from your system.

Debian package dependencies:
libpcre3
#libgumbo1
#libcrypto++9v5
libcurl3
libssl1.0.0
#libgoogle-glog0

Including those for mega.nz:
libc-ares2
libuv1
libsqlite3-0
libfreeimage3

== Building qimageuploader on Ubuntu
sudo apt install qt5-default libavcodec-dev libavformat-dev libavutil-dev libswscale-dev
